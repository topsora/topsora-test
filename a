package com.and.sample.screen.test

import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.heightIn
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.wrapContentSize
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.ArrowBackIosNew
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.CenterAlignedTopAppBar
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.HorizontalDivider
import androidx.compose.material3.Icon
import androidx.compose.material3.IconButton
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.saveable.rememberSaveable
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.colorResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.text.style.TextDecoration
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.and.sample.R
import com.and.sample.ui.common.core.SearchDropDown
import com.and.sample.ui.common.core.SearchTextField
import com.and.sample.ui.theme.SampleTheme

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun AdditionalEditScreen(modifier: Modifier) {
    Scaffold(
        topBar = {
            CenterAlignedTopAppBar(
                title = { Text(text = "付加情報の追加", fontWeight = FontWeight.Bold) },
                navigationIcon = {
                    IconButton(onClick = { }) {
                        Icon(Icons.Filled.ArrowBackIosNew, "")
                    }
                },
                modifier =
                Modifier
                    .fillMaxWidth(),
            )
        },
        content = { contentPadding ->
            Column(modifier = Modifier.padding(contentPadding)) {
                Text(
                    text = "この原簿に対する付加情報を追加します。",
                    textAlign = TextAlign.Center,
                    modifier =
                    Modifier
                        .fillMaxWidth()
                        .padding(top = 32.dp, bottom = 16.dp),
                )
                Card(
                    modifier =
                    modifier
                        .fillMaxWidth()
                        .padding(16.dp)
                        .clip(RoundedCornerShape(8.dp)),
                    colors =
                    CardDefaults.cardColors(
                        containerColor = MaterialTheme.colorScheme.surfaceContainer,
                    ),
                    shape = RoundedCornerShape(8.dp),
                ) {

                    Text(
                        text = "〒012-0011　東京都新宿区3-5-4",
                        modifier =
                        modifier
                            .padding(vertical = 8.dp, horizontal = 16.dp),
                        style = MaterialTheme.typography.titleSmall,
                        color = colorResource(id = R.color.gray),
                        maxLines = 1
                    )

                    Text(
                        text = "佐々木　太郎",
                        modifier =
                        modifier
                            .padding(vertical = 4.dp, horizontal = 16.dp),
                        style = MaterialTheme.typography.bodySmall,
                        fontWeight = FontWeight.SemiBold,
                        maxLines = 1
                    )

                    Text(
                        text = "佐々木　花子（旧姓：田中　花子）、一郎、二郎、田中　祖父男",
                        modifier =
                        modifier
                            .padding(vertical = 4.dp, horizontal = 16.dp),
                        style = MaterialTheme.typography.bodySmall,
                        fontWeight = FontWeight.SemiBold,
                        maxLines = 1
                    )
                    Spacer(modifier = modifier.height(8.dp))
                }
                Column(modifier = modifier.padding(16.dp)) {

                    Box(modifier = modifier.padding(4.dp)) {
                        SearchDropDown(
                            modifier = modifier
                                .wrapContentSize(),
                            placeholder = "指定場所配達位置",
                        ) {
                        }
                        println("asdf SearchDropDown on value change - ")
                    }
                    var condoName by rememberSaveable { mutableStateOf("") }

                    SearchTextField(
                        placeholder = "入力してください",
                        modifier = modifier
                            .fillMaxWidth()
                            .heightIn(100.dp),
                        value = condoName,
                        containerColor = Color.Transparent,
                        onValueChange = { condoName = it },
                    )
                }
                HorizontalDivider(
                    modifier = modifier.padding(
                        top = 16.dp,
                        start = 16.dp,
                        end = 16.dp,
                        bottom = 16.dp
                    )
                )
            }
        },
        bottomBar = {
            Column {
                Button(
                    modifier =
                    Modifier
                        .fillMaxWidth()
                        .padding(start = 32.dp, end = 32.dp, bottom = 8.dp),
                    shape = RoundedCornerShape(8.dp),
                    onClick = { },
                    colors = ButtonDefaults.buttonColors().copy(containerColor = Color.Gray),
                ) {
                    Text(
                        text = "確定する",
                        color = colorResource(id = R.color.white)
                    )
                }
                Button(
                    modifier =
                    Modifier
                        .fillMaxWidth()
                        .padding(bottom = 24.dp, start = 24.dp, end = 24.dp),
                    shape = RoundedCornerShape(8.dp),
                    onClick = { },
                    colors = ButtonDefaults.buttonColors().copy(containerColor = Color.Transparent),
                ) {
                    Text(
                        text = "キャンセル",
                        textDecoration = TextDecoration.Underline,
                        color = colorResource(id = R.color.gray)
                    )
                }
            }
        },
    )
}

@Preview(showBackground = true)
@Composable
fun PreviewAdditionalEditScreen() {
    SampleTheme {
        AdditionalEditScreen(modifier = Modifier)
    }
}
